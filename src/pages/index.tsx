"use client";

import Head from "next/head";
import { useState } from "react";
import { Button } from "~/components/ui/button";

import { api } from "~/utils/api";

const AddButton = () => {
  const [loading, setLoading] = useState(false);
  const utils = api.useContext();
  const m = api.shortUrls.add.useMutation();
  const handleAdd = () => {
    setLoading(true);
    m.mutate(
      {},
      {
        onSuccess: (data) => {
          // setLoading(false);
          void utils.shortUrls.invalidate();
        },
        onError: (err) => {
          // setLoading(false);
        }
      },
    );
  };

  return (
    <Button onClick={handleAdd} variant="secondary" size="lg" loading={loading}>
      test
    </Button>
  );
};

const DeleteButton = ({ uid }: { uid: string }) => {
  const utils = api.useContext();
  const m = api.shortUrls.delete.useMutation();

  const handleDelete = () => {
    m.mutate(
      {
        uid,
      },
      {
        onSuccess: (data) => {
          void utils.shortUrls.invalidate();
        },
      },
    );
  };

  return (
    <Button
      onClick={handleDelete}
      className="ml-4"
      variant="secondary"
      size="icon"
    >
      x
    </Button>
  );
};

export default function Home() {
  const hello = api.shortUrls.getAll.useQuery(undefined, {
    refetchOnWindowFocus: false,
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-background __variable_a64ecd theme-gray min-h-screen font-sans antialiased">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-6xl text-white">Welcome to tRPC</h1>
          <AddButton />
          <ul className="text-2xl text-white">
            {hello.data ? (
              <>
                {hello.data.map((shortUrl) => {
                  return (
                    <li key={shortUrl.uid}>
                      {shortUrl.code}
                      <DeleteButton uid={shortUrl.uid} />
                    </li>
                  );
                })}
              </>
            ) : (
              "Loading tRPC query..."
            )}
          </ul>
        </div>
      </main>
    </>
  );
}
